
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.hael.wsClient;

import java.util.logging.Logger;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2012-10-27T15:21:38.128-04:00
 * Generated source version: 2.7.0
 * 
 */

@javax.jws.WebService(
                      serviceName = "JumpCalculatorImplService",
                      portName = "JumpCalculatorImplPort",
                      targetNamespace = "http://evetool.hael.com/",
                      wsdlLocation = "http://localhost:8080/web/JumpCalculator?wsdl",
                      endpointInterface = "com.hael.wsClient.JumpCalculator")
                      
public class JumpCalculatorImpl implements JumpCalculator {

    private static final Logger LOG = Logger.getLogger(JumpCalculatorImpl.class.getName());

    /* (non-Javadoc)
     * @see com.hael.wsClient.JumpCalculator#getNpcKillsFor(com.hael.wsClient.SolarSystem  solarSystem ,)javax.xml.datatype.XMLGregorianCalendar  from ,)javax.xml.datatype.XMLGregorianCalendar  to )*
     */
    public java.util.List<com.hael.wsClient.MapSolarSystemNpcKillLog> getNpcKillsFor(com.hael.wsClient.SolarSystem solarSystem,javax.xml.datatype.XMLGregorianCalendar from,javax.xml.datatype.XMLGregorianCalendar to) throws NotARealSolarSystemException    { 
        LOG.info("Executing operation getNpcKillsFor");
        System.out.println(solarSystem);
        System.out.println(from);
        System.out.println(to);
        try {
            java.util.List<com.hael.wsClient.MapSolarSystemNpcKillLog> _return = new java.util.ArrayList<com.hael.wsClient.MapSolarSystemNpcKillLog>();
            com.hael.wsClient.MapSolarSystemNpcKillLog _returnVal1 = new com.hael.wsClient.MapSolarSystemNpcKillLog();
            com.hael.wsClient.ActivityLogPK _returnVal1Pk = new com.hael.wsClient.ActivityLogPK();
            _returnVal1Pk.setSolarSystemID(-1784278373);
            _returnVal1Pk.setTimeRetrieved(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2012-10-23T16:01:15.398-04:00"));
            _returnVal1.setPk(_returnVal1Pk);
            _returnVal1.setValue(-1505625882);
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new NotARealSolarSystemException("NotARealSolarSystemException...");
    }

    /* (non-Javadoc)
     * @see com.hael.wsClient.JumpCalculator#shortestRoute(java.lang.String  from ,)java.lang.String  to )*
     */
    public java.util.List<com.hael.wsClient.SolarSystem> shortestRoute(java.lang.String from,java.lang.String to) throws NoPathExistsException_Exception , IOException_Exception , NotARealSolarSystemException , NotEnoughArgumentsException    { 
        LOG.info("Executing operation shortestRoute");
        System.out.println(from);
        System.out.println(to);
        try {
            java.util.List<com.hael.wsClient.SolarSystem> _return = new java.util.ArrayList<com.hael.wsClient.SolarSystem>();
            com.hael.wsClient.SolarSystem _returnVal1 = new com.hael.wsClient.SolarSystem();
            _returnVal1.setName("Name1223442896");
            java.util.List<java.lang.String> _returnVal1NeighbourNames = new java.util.ArrayList<java.lang.String>();
            java.lang.String _returnVal1NeighbourNamesVal1 = "_returnVal1NeighbourNamesVal1938220691";
            _returnVal1NeighbourNames.add(_returnVal1NeighbourNamesVal1);
            _returnVal1.getNeighbourNames().addAll(_returnVal1NeighbourNames);
            _returnVal1.setSolarSystemID(1894744020);
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new NoPathExistsException_Exception("NoPathExistsException...");
        //throw new IOException_Exception("IOException...");
        //throw new NotARealSolarSystemException("NotARealSolarSystemException...");
        //throw new NotEnoughArgumentsException("NotEnoughArgumentsException...");
    }

    /* (non-Javadoc)
     * @see com.hael.wsClient.JumpCalculator#getJumpsFor(com.hael.wsClient.SolarSystem  solarSystem ,)javax.xml.datatype.XMLGregorianCalendar  from ,)javax.xml.datatype.XMLGregorianCalendar  to )*
     */
    public java.util.List<com.hael.wsClient.MapSolarSystemJumpLog> getJumpsFor(com.hael.wsClient.SolarSystem solarSystem,javax.xml.datatype.XMLGregorianCalendar from,javax.xml.datatype.XMLGregorianCalendar to) throws NotARealSolarSystemException    { 
        LOG.info("Executing operation getJumpsFor");
        System.out.println(solarSystem);
        System.out.println(from);
        System.out.println(to);
        try {
            java.util.List<com.hael.wsClient.MapSolarSystemJumpLog> _return = new java.util.ArrayList<com.hael.wsClient.MapSolarSystemJumpLog>();
            com.hael.wsClient.MapSolarSystemJumpLog _returnVal1 = new com.hael.wsClient.MapSolarSystemJumpLog();
            com.hael.wsClient.ActivityLogPK _returnVal1Pk = new com.hael.wsClient.ActivityLogPK();
            _returnVal1Pk.setSolarSystemID(-2071247203);
            _returnVal1Pk.setTimeRetrieved(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2012-10-23T16:01:15.401-04:00"));
            _returnVal1.setPk(_returnVal1Pk);
            _returnVal1.setValue(-24569436);
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new NotARealSolarSystemException("NotARealSolarSystemException...");
    }

    /* (non-Javadoc)
     * @see com.hael.wsClient.JumpCalculator#getSystem(java.lang.String  name )*
     */
    public com.hael.wsClient.SolarSystem getSystem(java.lang.String name) throws IOException_Exception , NotARealSolarSystemException    { 
        LOG.info("Executing operation getSystem");
        System.out.println(name);
        try {
            com.hael.wsClient.SolarSystem _return = new com.hael.wsClient.SolarSystem();
            _return.setName("Name-1501732056");
            java.util.List<java.lang.String> _returnNeighbourNames = new java.util.ArrayList<java.lang.String>();
            java.lang.String _returnNeighbourNamesVal1 = "_returnNeighbourNamesVal-2008487811";
            _returnNeighbourNames.add(_returnNeighbourNamesVal1);
            _return.getNeighbourNames().addAll(_returnNeighbourNames);
            _return.setSolarSystemID(1427795095);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IOException_Exception("IOException...");
        //throw new NotARealSolarSystemException("NotARealSolarSystemException...");
    }

    /* (non-Javadoc)
     * @see com.hael.wsClient.JumpCalculator#systemNameLookup(java.lang.String  string )*
     */
    public java.util.List<java.lang.String> systemNameLookup(java.lang.String string) throws IOException_Exception    { 
        LOG.info("Executing operation systemNameLookup");
        System.out.println(string);
        try {
            java.util.List<java.lang.String> _return = new java.util.ArrayList<java.lang.String>();
            java.lang.String _returnVal1 = "_returnVal1500807074";
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IOException_Exception("IOException...");
    }

	public java.util.List<com.hael.wsClient.MapSolarSystemPcKillLog> getPcKillsFor(com.hael.wsClient.SolarSystem solarSystem,javax.xml.datatype.XMLGregorianCalendar from,javax.xml.datatype.XMLGregorianCalendar to) throws NotARealSolarSystemException    { 
        LOG.info("Executing operation getPcKillsFor");
        System.out.println(solarSystem);
        System.out.println(from);
        System.out.println(to);
        try {
            java.util.List<com.hael.wsClient.MapSolarSystemPcKillLog> _return = new java.util.ArrayList<com.hael.wsClient.MapSolarSystemPcKillLog>();
            com.hael.wsClient.MapSolarSystemPcKillLog _returnVal1 = new com.hael.wsClient.MapSolarSystemPcKillLog();
            com.hael.wsClient.ActivityLogPK _returnVal1Pk = new com.hael.wsClient.ActivityLogPK();
            _returnVal1Pk.setSolarSystemID(370323323);
            _returnVal1Pk.setTimeRetrieved(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2012-10-26T14:36:08.391-04:00"));
            _returnVal1.setPk(_returnVal1Pk);
            _returnVal1.setValue(-2109091973);
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new NotARealSolarSystemException("NotARealSolarSystemException...");
    }

}
