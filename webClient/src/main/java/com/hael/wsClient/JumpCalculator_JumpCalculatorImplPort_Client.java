
package com.hael.wsClient;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2012-10-27T15:21:37.192-04:00
 * Generated source version: 2.7.0
 * 
 */
public final class JumpCalculator_JumpCalculatorImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://evetool.hael.com/", "JumpCalculatorImplService");

    private JumpCalculator_JumpCalculatorImplPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = JumpCalculatorImplService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        JumpCalculatorImplService ss = new JumpCalculatorImplService(wsdlURL, SERVICE_NAME);
        JumpCalculator port = ss.getJumpCalculatorImplPort();  
        
        {
        System.out.println("Invoking getNpcKillsFor...");
        com.hael.wsClient.SolarSystem _getNpcKillsFor_solarSystem = new com.hael.wsClient.SolarSystem();
        _getNpcKillsFor_solarSystem.setName("Name-1789999943");
        java.util.List<java.lang.String> _getNpcKillsFor_solarSystemNeighbourNames = new java.util.ArrayList<java.lang.String>();
        java.lang.String _getNpcKillsFor_solarSystemNeighbourNamesVal1 = "_getNpcKillsFor_solarSystemNeighbourNamesVal1568498648";
        _getNpcKillsFor_solarSystemNeighbourNames.add(_getNpcKillsFor_solarSystemNeighbourNamesVal1);
        _getNpcKillsFor_solarSystem.getNeighbourNames().addAll(_getNpcKillsFor_solarSystemNeighbourNames);
        _getNpcKillsFor_solarSystem.setSolarSystemID(-1264330151);
        javax.xml.datatype.XMLGregorianCalendar _getNpcKillsFor_from = javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2012-10-23T16:01:15.277-04:00");
        javax.xml.datatype.XMLGregorianCalendar _getNpcKillsFor_to = javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2012-10-23T16:01:15.279-04:00");
        try {
            java.util.List<com.hael.wsClient.MapSolarSystemNpcKillLog> _getNpcKillsFor__return = port.getNpcKillsFor(_getNpcKillsFor_solarSystem, _getNpcKillsFor_from, _getNpcKillsFor_to);
            System.out.println("getNpcKillsFor.result=" + _getNpcKillsFor__return);

        } catch (NotARealSolarSystemException e) { 
            System.out.println("Expected exception: NotARealSolarSystemException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking shortestRoute...");
        java.lang.String _shortestRoute_from = "_shortestRoute_from666047493";
        java.lang.String _shortestRoute_to = "_shortestRoute_to-461701301";
        try {
            java.util.List<com.hael.wsClient.SolarSystem> _shortestRoute__return = port.shortestRoute(_shortestRoute_from, _shortestRoute_to);
            System.out.println("shortestRoute.result=" + _shortestRoute__return);

        } catch (NoPathExistsException_Exception e) { 
            System.out.println("Expected exception: NoPathExistsException has occurred.");
            System.out.println(e.toString());
        } catch (IOException_Exception e) { 
            System.out.println("Expected exception: IOException has occurred.");
            System.out.println(e.toString());
        } catch (NotARealSolarSystemException e) { 
            System.out.println("Expected exception: NotARealSolarSystemException has occurred.");
            System.out.println(e.toString());
        } catch (NotEnoughArgumentsException e) { 
            System.out.println("Expected exception: NotEnoughArgumentsException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getJumpsFor...");
        com.hael.wsClient.SolarSystem _getJumpsFor_solarSystem = new com.hael.wsClient.SolarSystem();
        _getJumpsFor_solarSystem.setName("Name-898890074");
        java.util.List<java.lang.String> _getJumpsFor_solarSystemNeighbourNames = new java.util.ArrayList<java.lang.String>();
        java.lang.String _getJumpsFor_solarSystemNeighbourNamesVal1 = "_getJumpsFor_solarSystemNeighbourNamesVal1386705172";
        _getJumpsFor_solarSystemNeighbourNames.add(_getJumpsFor_solarSystemNeighbourNamesVal1);
        _getJumpsFor_solarSystem.getNeighbourNames().addAll(_getJumpsFor_solarSystemNeighbourNames);
        _getJumpsFor_solarSystem.setSolarSystemID(341436527);
        javax.xml.datatype.XMLGregorianCalendar _getJumpsFor_from = javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2012-10-23T16:01:15.286-04:00");
        javax.xml.datatype.XMLGregorianCalendar _getJumpsFor_to = javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2012-10-23T16:01:15.287-04:00");
        try {
            java.util.List<com.hael.wsClient.MapSolarSystemJumpLog> _getJumpsFor__return = port.getJumpsFor(_getJumpsFor_solarSystem, _getJumpsFor_from, _getJumpsFor_to);
            System.out.println("getJumpsFor.result=" + _getJumpsFor__return);

        } catch (NotARealSolarSystemException e) { 
            System.out.println("Expected exception: NotARealSolarSystemException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getSystem...");
        java.lang.String _getSystem_name = "_getSystem_name-98593495";
        try {
            com.hael.wsClient.SolarSystem _getSystem__return = port.getSystem(_getSystem_name);
            System.out.println("getSystem.result=" + _getSystem__return);

        } catch (IOException_Exception e) { 
            System.out.println("Expected exception: IOException has occurred.");
            System.out.println(e.toString());
        } catch (NotARealSolarSystemException e) { 
            System.out.println("Expected exception: NotARealSolarSystemException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking systemNameLookup...");
        java.lang.String _systemNameLookup_string = "_systemNameLookup_string-893142308";
        try {
            java.util.List<java.lang.String> _systemNameLookup__return = port.systemNameLookup(_systemNameLookup_string);
            System.out.println("systemNameLookup.result=" + _systemNameLookup__return);

        } catch (IOException_Exception e) { 
            System.out.println("Expected exception: IOException has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
